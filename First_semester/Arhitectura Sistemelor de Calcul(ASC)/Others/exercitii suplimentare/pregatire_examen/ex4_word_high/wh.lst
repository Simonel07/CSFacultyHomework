     1                                  bits 32
     2                                  
     3                                  global start    
     4                                      
     5                                  extern exit, printf 
     6                                  import exit msvcrt.dll
     7                                  import printf msvcrt.dll  
     8                                  
     9                                  segment data use32 class=data
    10 00000000 78A63412345678122B-         sir dd 1234A678h, 12785634h, 1A4D3C2Bh
    10 00000009 3C4D1A             
    11                                      len equ ($-sir)/4
    12 0000000C 2578                        format dw "%x"
    13                                      
    14                                  segment code use32 class=code
    15                                      start:
    16 00000000 B903000000                      mov ecx, len
    17 00000005 BE00000000                      mov esi, 0
    18 0000000A BB00000000                      mov ebx, 0
    19                                          parcurgere:
    20 0000000F 66B80000                            mov ax, 0
    21 00000013 8A24B5[03000000]                    mov ah, [sir+(esi+1)*4-1]
    22 0000001A 8A04B5[01000000]                    mov al, [sir+esi*4+1]
    23 00000021 51                                  push ecx
    24 00000022 B910000000                          mov ecx, 16
    25 00000027 BF00000000                          mov edi, 0
    26                                              rotire:
    27 0000002C B200                                    mov dl, 0
    28 0000002E 66D1D0                                  rcl ax, 1
    29 00000031 80D200                                  adc dl, 0
    30 00000034 80FA00                                  cmp dl, 0
    31 00000037 7401                                    je nth
    32 00000039 47                                      inc edi
    33                                                  nth:
    34 0000003A E2F0                                loop rotire
    35 0000003C 01FB                                add ebx, edi
    36 0000003E 59                                  pop ecx
    37 0000003F 46                                  inc esi
    38 00000040 E2CD                            loop parcurgere
    39                                          
    40 00000042 B903000000                      mov ecx, len
    41                                          
    42                                          afisare:
    43 00000047 51                                  push ecx
    44 00000048 FF348D[FCFFFFFF]                    push dword [sir+(ecx-1)*4]
    45 0000004F 68[0C000000]                        push dword format
    46 00000054 FF15[00000000]                      call [printf]
    47 0000005A 83C408                              add esp, 4*2
    48 0000005D 59                                  pop ecx
    49 0000005E E2E7                            loop afisare
    50 00000060 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    51 00000062 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
